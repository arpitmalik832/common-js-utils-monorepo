name: Tests
permissions:
  contents: read
  pull-requests: read

on:
  pull_request:
    branches:
      - development
      - staging
      - beta
      - release
      - master
      - 'feature-*'

env:
  PNPM_VERSION: 10.5.0
  NODE_VERSION: 22
  NX_CACHE_DIRECTORY: .nx-cache

jobs:
  dependency-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Installing pnpm ${{ env.PNPM_VERSION }}
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Using Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Nx cache
        uses: actions/cache@v4
        with:
          path: ${{ env.NX_CACHE_DIRECTORY }}
          key: ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-nx-
      - name: Authenticating with GitHub Packages
        run: |
          find . -type f -name ".npmrc" -exec sh -c '
            echo "Processing: {}"
            sed -i "s|//npm.pkg.github.com/:_authToken=\${GH_TOKEN}|//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}|g" {}
            cat {}
          ' \;
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
          echo "Added token to global .npmrc"
      - name: Installing dependencies
        run: pnpm install --frozen-lockfile
      - name: Running dependency audit
        run: pnpm audit
  outdated:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Installing pnpm ${{ env.PNPM_VERSION }}
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Using Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Nx cache
        uses: actions/cache@v4
        with:
          path: ${{ env.NX_CACHE_DIRECTORY }}
          key: ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-nx-
      - name: Authenticating with GitHub Packages
        run: |
          find . -type f -name ".npmrc" -exec sh -c '
            echo "Processing: {}"
            sed -i "s|//npm.pkg.github.com/:_authToken=\${GH_TOKEN}|//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}|g" {}
            cat {}
          ' \;
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
          echo "Added token to global .npmrc"
      - name: Installing dependencies
        run: pnpm install --frozen-lockfile
      - name: Running outdated
        run: pnpm outdated
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Installing pnpm ${{ env.PNPM_VERSION }}
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Using Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Nx cache
        uses: actions/cache@v4
        with:
          path: ${{ env.NX_CACHE_DIRECTORY }}
          key: ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-nx-
      - name: Authenticating with GitHub Packages
        run: |
          find . -type f -name ".npmrc" -exec sh -c '
            echo "Processing: {}"
            sed -i "s|//npm.pkg.github.com/:_authToken=\${GH_TOKEN}|//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}|g" {}
            cat {}
          ' \;
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
          echo "Added token to global .npmrc"
      - name: Installing dependencies
        run: pnpm install --frozen-lockfile
      - name: Building the packages
        run: pnpm build:pkg:prod
      - name: Running lint
        run: pnpm lint
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Installing pnpm ${{ env.PNPM_VERSION }}
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Using Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Nx cache
        uses: actions/cache@v4
        with:
          path: ${{ env.NX_CACHE_DIRECTORY }}
          key: ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-nx-
      - name: Authenticating with GitHub Packages
        run: |
          find . -type f -name ".npmrc" -exec sh -c '
            echo "Processing: {}"
            sed -i "s|//npm.pkg.github.com/:_authToken=\${GH_TOKEN}|//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}|g" {}
            cat {}
          ' \;
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
          echo "Added token to global .npmrc"
      - name: Installing dependencies
        run: pnpm install --frozen-lockfile
      - name: Building the packages
        run: pnpm build:pkg:prod
      - name: Running unit tests
        run: pnpm test:coverage
  e2e-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-apps:
          - common-js-utils
          - common-js-utils-flow
    steps:
      - uses: actions/checkout@v4
      - name: Installing pnpm ${{ env.PNPM_VERSION }}
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Using Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Nx cache
        uses: actions/cache@v4
        with:
          path: ${{ env.NX_CACHE_DIRECTORY }}
          key: ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-nx-
      - name: Cypress binary cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-cypress-
      - name: Authenticating with GitHub Packages
        run: |
          find . -type f -name ".npmrc" -exec sh -c '
            echo "Processing: {}"
            sed -i "s|//npm.pkg.github.com/:_authToken=\${GH_TOKEN}|//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}|g" {}
            cat {}
          ' \;
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
          echo "Added token to global .npmrc"
      - name: Installing dependencies
        run: pnpm install --frozen-lockfile
      - name: Installing cypress
        uses: cypress-io/github-action@v6
        with:
          working-directory: test-apps/${{ matrix.test-apps }}
          install: true
          runTests: false
      - name: Running e2e tests
        run: pnpm e2e-run
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Installing pnpm ${{ env.PNPM_VERSION }}
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Using Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Nx cache
        uses: actions/cache@v4
        with:
          path: ${{ env.NX_CACHE_DIRECTORY }}
          key: ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-nx-
      - name: Authenticating with GitHub Packages
        run: |
          find . -type f -name ".npmrc" -exec sh -c '
            echo "Processing: {}"
            sed -i "s|//npm.pkg.github.com/:_authToken=\${GH_TOKEN}|//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}|g" {}
            cat {}
          ' \;
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
          echo "Added token to global .npmrc"
      - name: Installing dependencies
        run: pnpm install --frozen-lockfile
      - name: Building the project
        run: pnpm build:prod
  storybook-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Installing pnpm ${{ env.PNPM_VERSION }}
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Using Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Nx cache
        uses: actions/cache@v4
        with:
          path: ${{ env.NX_CACHE_DIRECTORY }}
          key: ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-nx-
      - name: Authenticating with GitHub Packages
        run: |
          find . -type f -name ".npmrc" -exec sh -c '
            echo "Processing: {}"
            sed -i "s|//npm.pkg.github.com/:_authToken=\${GH_TOKEN}|//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}|g" {}
            cat {}
          ' \;
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
          echo "Added token to global .npmrc"
      - name: Installing dependencies
        run: pnpm install --frozen-lockfile
      - name: Building the storybook
        run: pnpm storybook:build:prod
  bundle-watch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Installing pnpm ${{ env.PNPM_VERSION }}
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Using Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Nx cache
        uses: actions/cache@v4
        with:
          path: ${{ env.NX_CACHE_DIRECTORY }}
          key: ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nx-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-nx-
      - name: Authenticating with GitHub Packages
        run: |
          find . -type f -name ".npmrc" -exec sh -c '
            echo "Processing: {}"
            sed -i "s|//npm.pkg.github.com/:_authToken=\${GH_TOKEN}|//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}|g" {}
            cat {}
          ' \;
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
          echo "Added token to global .npmrc"
      - name: Installing dependencies
        run: pnpm install --frozen-lockfile
      - name: Building the project
        run: pnpm build:prod
      - name: Checking bundle size
        run: pnpx bundlewatch --config bundlewatch.config.json
        env:
          BUNDLEWATCH_GITHUB_TOKEN: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}
          CI_REPO_OWNER: ${{ github.repository_owner }}
          CI_REPO_NAME: ${{ github.event.repository.name }}
          CI_COMMIT_SHA: ${{ github.sha }}
